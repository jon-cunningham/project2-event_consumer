service: JPC-Messaging-Service

plugins:
  - serverless-python-requirements

custom:
  bucketName: 'cunningham-message-bucket'
  shared_message_bus: ${ssm:/${self:provider.stage}/serverless/tbg_message_bus}
  pythonRequirements:
    pythonBin: python3
    dockerizePip: true

package:
  patterns:
    - "!.venv/"
    - "!node_modules/"

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        - 'arn:aws:s3:::${self:custom.bucketName}'
        - 'arn:aws:s3:::${self:custom.bucketName}/*'
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:SendMessageBatch
        - sqs:ReceiveMessage
        - sqs:ReceiveMessageBatch
        - sqs:DeleteMessage
        - sqs:DeleteMessageBatch
        - sqs:GetQueueUrl
      Resource:
        - arn:aws:sqs:*:*:${self:custom.CunninghamQueue}

  environment:

# function for logging the event
functions:
  MessageLogger:
    handler: app.handler
    events:
      - sqs:
        batchSize: 1
        arn:
          Fn::GetAtt:
            - CunninghamQueue
            - Arn

resources:
  Resources:
    # SQS Queue to receive messages from SNS
    CunninghamQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: CunninghamQueue
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt CunninghamDeadLetterQueue.Arn
          maxReceiveCount: 10

    # Queue policy for the 'CunninghamQueue'
    CunninghamQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: "allow-sns-messages"
              Effect: Allow
              Principal: "*"
              Resource: !GetAtt
                - CunninghamQueue
                - Arn
              Action: "SQS:SendMessage"
              Condition:
                ArnEquals:
                  "aws:SourceArn":
                    Fn::Join:
                      - ':'
                      - - 'arn:aws:sns'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - ${self:custom.shared_message_bus}
        Queues:
          - Ref: CunninghamQueue

    # DLQ for 'CunninghamQueue'
    CunninghamDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: DLQ_${self:custom.CunninghamQueue}
        MessageRetentionPeriod: 1209600

    # Queue Subscription to SNS
    MessageSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn:
          Fn::Join:
            - ':'
            - - 'arn:aws:sns'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - ${self:custom.shared_message_bus}
        Endpoint:
          Fn::GetAtt:
            - CunninghamQueue
            - Arn
        Protocol: sqs
        RawMessageDelivery: 'true'


